version: 2.1
executors:
  app-executor:
    docker:
      - image: circleci/node:12.16.3
    working_directory: ~/repo

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json" }}
        - app-
  - &install-dependencies
    run:
      name: Install project dependencies
      command: yarn install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &install-aws-cli
    run:
      name: Install awscli
      working_directory: /
      command: |
        sudo apt-get -y update
        sudo apt-get install -y awscli
        sudo apt-get install -y python-pip python-dev build-essential
  - &build-project
    run:
      name: Build project
      command: |
        yarn install
        yarn build
        cd dist
        zip ../dist.zip -r * .[^.]*
        echo "Build successful"

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  linting:
    executor: app-executor
    steps:
      - checkout
      - *restore-cache
      - run:
          name: Run linting
          command: |
            if [ "${CIRCLE_BRANCH}" != "main" and "${CIRCLE_BRANCH}" != "staging"]
            then
              yarn lint
            fi

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3 Bucket
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]
            then
              aws s3 sync ~/repo/dist s3://${AWS_PROD_BUCKET} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws s3 sync ~/repo/dist s3://${AWS_STAGING_BUCKET} --delete
            else
              aws s3 sync ~/repo/dist s3://${AWS_DEV_BUCKET} --delete
            fi

  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3 Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "main" ]
            then
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - linting:
          requires:
            - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - main
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - main
